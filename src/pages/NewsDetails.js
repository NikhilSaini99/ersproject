import { Box, Grid, Stack, Typography } from "@mui/material";
import React, { useEffect } from "react";

import Banner from "../assets/images/news-banner.jpg";
import Footer from "@/components/Footer";
import Head from "next/head";
import Header from "@/components/Header";
import Image from "next/image";
import { LatestNewsSection } from "../pages/news";
import Loader from "@/components/Loader";
import dayjs from "dayjs";
import { useFetch } from "./api/api";
import { useRouter } from "next/router";
import DOMPurify from "dompurify";
import styles from "./NewsDetail-style.module.css"

const resetCSS = `
<style>
  .reset-this-root {
    all: unset;
  }
  ol, ol ol, ol ol ol, ol ol ol ol, ol ol ol ol ol {
    list-style-type: decimal !important;
    padding-left: 40px !important;
  }
</style>
`;

export default function NewsDetails() {
  const router = useRouter();
  const query = router.query;

  const { fetchAPI, data, isLoading } = useFetch(
    "get",
    `${query.apiURl}/${query.id}`
  );
  const { data: allNews, fetchAPI:allNewsFetch, isLoading:allNewsLoading } = useFetch("get", "/api/news");

  useEffect(() => {
    fetchAPI();
    allNewsFetch()
  }, [fetchAPI,allNewsFetch]);

  const News = {};
  if (data?.data) {
    const {
      description,
      newsName,
      url,
      publicMeetingName,
      uploadDate,
      author_name,
    } = data?.data;
    News.description = description;
    News.newsName = newsName || publicMeetingName;
    News.url = url;
    News.uploadDate = uploadDate;
    News.author_name = author_name;
  }

 
  return (
    <>
      <Head>
        <title>Media</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      {/*-----------------------Header---------------------*/}

      <Header />

         <Box sx={{ height: { xs: "15rem", lg: "30rem", xs: "30rem" } }}>
        <Image
          src={Banner}
          alt="Public Meeting"
          width={0}
          height={0}
          style={{
            width: "100%",
            height: "100%",
            objectFit: "cover",
          }}
        />
      </Box>
      {/*-----------------------Detailed News---------------------*/}
      {isLoading ? (
        <Loader />
      ) : (
        <section className="h-full">
        <Typography variant="h4" sx={{ fontWeight: "bold", textAlign: "left", ml: "5.9rem", my:"2rem", }}>All News</Typography>

          <Grid container>
            {/* LEFT SIDE START */}
            {data?.data && (
              <Grid item xs={8} sx={{ marginTop: "0rem" }}>
                <Stack
                  sx={{
                    flexDirection: "column",
                    margin: {
                      xs: "0px 5rem 4rem 6rem",
                      md: "0px 5rem 4rem 2rem",
                      lg: "0px 5rem 4rem 6rem",
                      xl: "0px 5rem 4rem 15rem",
                    },
                    width: { xs: "85%", md: "90%", lg: "78%", xl: "70%" },
                    gap: "2rem",
                  }}
                >
                  <Box sx={{ width: "100%", height: "450px" }}>
                    {/* eslint-disable-next-line @next/next/no-img-element */}
                    <img
                      src={News.url}
                      alt={News.newsName}
                      style={{
                        width: "100%",
                        height: "100%",
                        objectFit: "cover",
                      }}
                    />
                  </Box>
                  <Typography variant="body1" sx={{}}>
                    {dayjs(News.uploadDate).format("DD-MM-YYYY")}
                    <br />
                    By - <strong>{News.author_name}</strong>
                  </Typography>
                  <Stack sx={{ flexDirection: "column", gap: "1.5rem" }}>
                    <Typography
                      variant="body1"
                      sx={{ fontWeight: "400", fontSize: "2rem" }}
                    >
                      {News.newsName}
                    </Typography>
                    <div className={styles.reset_this_root}
                      dangerouslySetInnerHTML={{
                        __html: DOMPurify.sanitize(resetCSS + News.description),
                      }}
                    ></div>
                    <Typography variant="body1"></Typography>
                  </Stack>
                </Stack>
              </Grid>
            )}

            {/* Right Side with latest news*/}
            {
              <LatestNewsSection restNews={allNews?.data?.slice(3)} isLoading={allNewsLoading}
                isPublic={query.apiURl === "/api/publicMeeting"}
              />
            }
            {/* Right Side End */}
          </Grid>
        </section>
      )}

      {/*-----------------------Footer---------------------*/}

      <Footer />
    </>
  );
}
