/* eslint-disable @next/next/no-img-element */
import React, { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import Banner from "../assets/images/gallery.jpg";
import { GallaryCard } from "@/components/media";
import { GalleryData } from "@/content/data";
import { useFetch } from "./api/api";
import { useEffect } from "react";
import { useMemo } from "react";
import { Box, IconButton, Modal } from "@mui/material";
import ArrowForwardIosIcon from "@mui/icons-material/ArrowForwardIos";
import ArrowBackIosIcon from "@mui/icons-material/ArrowBackIos";
import CloseIcon from "@mui/icons-material/Close"

export default function Gallery() {
  const [visibleGroup, setVisibleGroup] = useState(0);
  const [selectedImageIndex, setSelectedImageIndex] = useState(0);
  const [isImageViewerOpen, setImageViewerOpen] = useState(false);
  const { data, fetchAPI, isLoading } = useFetch(
    "get",
    "/api/gallery-images/web"
  );

  
  useEffect(() => {
    fetchAPI();
  }, [fetchAPI]);

  const openImageViewer = (index) => {
    if (GroupImgArr[visibleGroup]) {
      setSelectedImageIndex(index);
      setImageViewerOpen(true);
    }
  };

  const closeImageViewer = () => {
    setImageViewerOpen(false);
  };

  const GroupImgArr = [];
  let newgalleryData;
  if (data?.success) {
    newgalleryData = data?.data;
  }
// console.log("XXXXX", newgalleryData);
  const GroupTitles = newgalleryData && Object.keys(newgalleryData);
  const GroupImages = newgalleryData && Object.values(newgalleryData);

  if (GroupImages)
    for (const item of GroupImages) {
      const eachGroupImages = item.url.split(" ");
      GroupImgArr.push(eachGroupImages);
    }

  // console.log(GroupImgArr);

  const handleVisiblity = (i) => {
    setVisibleGroup(i);
  };
// if(GroupImgArr){
//   console.log("===========", GroupImgArr?.[visibleGroup]?.[selectedImageIndex])
// }
  return (
    <>
      <Head>
        <title>Media</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      {/*-----------------------Header---------------------*/}

      <Header />

      {/*-----------------------Banner---------------------*/}

      <section>
        <Image src={Banner} alt="..." className="h-96 w-full" />
      </section>

      {/*-----------------------Gallery---------------------*/}
    
      <section className="bg-white px-6 py-16">
        <div>
          <h1
            className=" text-[#2F3192] text-4xl font-semibold w-80"
            style={{ marginLeft: "2rem" }}
          >
            ERS Image Gallery
          </h1>
          <div
            className="border w-[264px] border-yellowish mt-2"
            style={{ marginLeft: "2rem" }}
          ></div>
        </div>

        {/* Group Indicator */}
        <div className="flex justify-center items-center gap-5 my-10">
          {GroupTitles?.map((title, id) => (
            <button
              key={id}
              onClick={() => handleVisiblity(id)}
              className={`text-base text-black/80 bg-[#F7F7FA] text-center leading-6 font-semibold uppercase border border-[#ECECEC] rounded-full px-7 py-1
               hover:text-white hover:bg-mainColor hover:ease-in hover:duration-300 ${
                 visibleGroup === id
                   ? "bg-mainColor text-white"
                   : "bg-[#F7F7FA] text-black/80"
               }`}
            >
              {title}
            </button>
          ))}
        </div>

        <div className="">
          {GroupImgArr &&
            GroupImgArr.map((item, index) => (
              <div
                key={index}
                className={`grid grid-cols-3 sm:w-95 md:w-full xl:w-95 2xl:w-85 mx-auto gap-4 overflow-hidden ${
                  index === visibleGroup ? "block" : "hidden"
                } `}
              >
                {item.map((item, i) => {
                  return (
                    <div
                      key={i}
                      className="flex  max-w-[450px] h-[400px] flex-col justify-between  group relative "
                    >
                      <div className="  h-full overflow-hidden cursor-pointer " onClick={()=>openImageViewer(i)}>
                        <img
                          src={item}
                          className="object-cover  group-hover:scale-110  ease-in-out duration-500  group-hover:brightness-50"
                          alt="group-images"
                          style={{ width: "100%", height: "100%" }}
                        />
                      </div>
                      <div className="absolute opacity-0 group-hover:opacity-100 ease-in duration-500  bottom-0 text-center w-full">
                        <h3 className="text-lg text-white font-medium mx-4">
                          Image Date
                        </h3>
                        <div className="flex flex-col gap-2 px-6 pt-10 pb-4 text-white bg-mainColor">
                          <h1 className="text-[17px] leading-[22px] tracking-wide font-bold">
                           Image Name
                          </h1>
                          <h2 className="text-sm leading-5 tracking-normal font-normal text-center">
                           Image description
                          </h2>
                        </div>
                      </div>
                    </div>
                  );
                })}
                 <Modal
        open={isImageViewerOpen}
        onClose={closeImageViewer}
        aria-labelledby="image-viewer"
        aria-describedby="image-viewer"
      >
        <Box
          sx={{
            position: "absolute",
            top: "50%",
            left: "50%",
            transform: "translate(-50%, -50%)",
            width: "80vw",
            height: "80vh",
            bgcolor: "background.paper",
            border: "2px solid #000",
            borderRadius: "8px",
            p: 2,
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
          }}
        >
          <IconButton onClick={closeImageViewer} style={{ position: "absolute", top: 10, right: 10 }}>
            <CloseIcon />
          </IconButton>
          <img
            src={GroupImgArr?.[visibleGroup]?.[selectedImageIndex]}
            alt="Selected Image"
            style={{width:"100%", minHeight:"95%"}}
            layout="responsive"
          />
          <div style={{ marginTop: "1rem" }}>
            <IconButton
              onClick={() =>
                setSelectedImageIndex((prevIndex) =>
                  prevIndex === 0 ? GroupImgArr[visibleGroup].length - 1 : prevIndex - 1
                )
              }
            >
              <ArrowBackIosIcon />
            </IconButton>
            <IconButton
              onClick={() =>
                setSelectedImageIndex((prevIndex) =>
                  prevIndex === GroupImgArr[visibleGroup].length - 1 ? 0 : prevIndex + 1
                )
              }
            >
              <ArrowForwardIosIcon />
            </IconButton>
          </div>
        </Box>
      </Modal>

              </div>
            ))}
        </div>
      </section>

      {/*-----------------------Footer---------------------*/}

      <Footer />
    </>
  );
}
